h1. SerializedAttributes

SerializedAttributes allows you to add an encoded hash to an ActiveRecord model.  
This is similar to the built-in ActiveRecord serialization, except that the field 
is converted to JSON, gzipped, and stored in a BLOB field.  This uses the json
gem which is much faster than YAML serialization.  However, JSON is not nearly as
flexible, so you're stuck with strings/integers/dates/etc.

Where possible, ActiveRecord compatible methods are generated so that a migration 
should be pretty simple.  See unit tests for examples.

Some of the code and most of the ideas are taken from "Heresy":http://github.com/kabuki/heresy/tree/master, 
a ruby implementation of "how FriendFeed uses MySQL for schema-free storage":http://bret.appspot.com/entry/how-friendfeed-uses-mysql.

h2. Setup

Install the plugin into your Rails app.

h2. Usage

<pre><code>
class Profile &lt; ActiveRecord::Base
  # assumes #data serializes to raw_data blob field
  serialize_attributes do
    string  :title, :description
    integer :age
    float   :rank, :percentage
    time    :birthday
  end

  # Serializes #data to assumed raw_data blob field
  serialize_attributes :data do
    string  :title, :description
    integer :age
    float   :rank, :percentage
    time    :birthday
  end

  # set the blob field
  serialize_attributes :data, :blob => :serialized_field do
    string  :title, :description
    integer :age
    float   :rank, :percentage
    time    :birthday
  end
end
</code></pre>
